%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: threshould_accuracy.inc.drv.dvi
%%CreationDate: Sun Apr 27 15:09:08 2014
%%BoundingBox: 106 485 407 676
%%DocumentFonts: CMR10 CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E threshould_accuracy.inc.drv.dvi -o
%+ threshould_accuracy.eps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.04.27:1509
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 86 /V put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176676ABB71BBD0EE56B4CC492C0652750227CEC4A51077DB938FEF83F6E
5A64435CC402154C9EFFA4B2C86145E03C127971D7F8F53618DE7AAC033F2D01
28181D52FAB2BC5DA2E18D8CBA3A80071CE07D89AB60CAD18751A9A0A5C89DF7
11AFDD1776B8C6633CB5FBA284F1E8688CFEDBE3666F319D5D3A7DAFA43EDA6F
FA9C1B6BB73112DAF10C3D28451517D3FAD604BCECDB579F299B0D0444614619
48A6E80BE3103A1630B17D1DE04FE8FE803ECF63B8DBD1D453B4EF2D5D828C88
27B4BE3DC6458CBE3F9F2A7E398FE708637EB4D1C77BF989C65DC5EAD7D343DD
DFD0396FF49DFC4690B97D3A15B9AACFD7212894FDB0B25A71A3753FC6A5C290
A811C8619188A472E00FF68B3F5F2D6E669851C071F69D68806E596757774D1C
92B387A4953690E50F48B606316DFFCC9004E6AF71A0B6342008C410C9DD0A28
3B8ACE2B4FBB51AAA1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /macron put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 79 /O put
dup 80 /P put
dup 85 /U put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99C5C63F2AF354D6D558EBE1528C44E2040F3412C67F1A7
28E5753F035E5BEA74E282B3BC4B1D6D30A3B7C7C23B7B83DD252E4A358320BC
9F127F0DCE2ABA2728E04EF38E58930E37654FDD73BF47D39D1E8727E9DDBA63
B63D7F1FB3806B69940F4159F723C18E89E9F85BB44B66FCF9A4BBFD76C673CC
A729412DD783FFF4C30AF163EF2E273FCB099FF6A42B59D893C1BAA30DD1DD0A
CEA39CFAA5E49001ACAE4F5C9E891A977437EE32D60741C7A175FEABDA80DAB4
1BF73EEE203D36CDFD4F1389C10F4F554EC270C3E559AF40AD4B8483AC051F54
CBC8A1EAE07099B16387554E948ED744BEC8FC75DD015D2DAE1629CFAC20E920
163F52FDDE3DA8E9FD9A8AE38014C2A8368C9573520C06A1CFFA00A0A0B1DECA
848078006E46E015111E360A1EEA6551076B53AF9F34FFDE33CFB211C49FE7A5
3D7D807E6272CD38C921577A002AF69C367F0DD4D73689183798A4A260509567
2AF4C48259422AD260702C4419860A94D0E467A9832EFD09AEF25DF62093536D
23CC3D95D3D147D7B7F1A1A101FCC57E7C01E510D507ECCC190832266609281D
85FCF8530FFB377CDEBC816B9E8F767240D2852E8CD9A9DEDFB8D1C18A2717AC
4A6EB4BFF31C8BA404474B0A98D4E387602D1192249E1FD65C395EECC5BD05C9
2AA7C03A7F8CBADDF620002D182AF8045FE324CAFE784CB873F37F99019B5DCE
5BD7A774F8DAFD20F05C37F2EB54F2D57E2F9A8251112452C18F8DFC654DF853
2E4A4E5F663564AA34B5901221DF29E7134DA18D08023B53E575B875E4D407B5
AFAE51D0A8CDD7778BC48C2EA7E6A19A68B64EAF236A3468C0F9453189A02A30
8B1561AFD0FEEBD3C2434637AD72160708B53427AF2DC7D7F61C6ED7F70507FC
28949CEA513221EDF0B1C967F9C659C957EE931FD2EE765595DA627D0354349C
9EF7263D44ED08CB75044192095C5724AE53999833084C6D9B13D774244155B4
2B15D7AEDE0FE51901496D78CF8881AC45E3EA6C08A27AC43C5AC2A55FDF4D6F
F38C1F6ECCDE9B000C7AEA74AD463E8BC6D368FE70CB2A57A75EDB492216A0DB
EBA3C5D499DB9FE842B8640BA12C741198AF6A356D485991AA3CEA5E4E540DEF
25B3BE7E42E23126D7D65A633FFA17EB589A686026122C29117ED5EEB828989C
9EE879966182AC10950452A2665B37BD8BFB9D5E0D1A4FBEB7454D31D436E408
8F3E791B18EBB41AA204879B43DD2A7DE41A157F4409E671698E5BE2821AC191
C7D2746227BC2B0279C8A8FB08BB91D6CB6ACA457CE1EF8DDE606CC459307E2E
C045DC238D6998DC12DA292D119E644390DFDA0E2D54C29ECF26B458A6EA12A8
80D0E311767277F0487C9E4EA676F3953B09DA9B3FF897938CB2EE27F6EFFD1B
B012A9C1EA0975663329E131DE498F3D63FCBD85D77793521FBD655FE2C3D3C3
59FC79640F3AD06C659193D06629E4EB373B278E03DE6BBE480E2A368B60B715
2E9742B7F25853B5971D6455F1B5FE4912AA567EEA7A10804925CCF8CEFFA624
0544202F25EA446FFB709C7E2E8066DFE5137EA4C9EA1CF6658D389A28BC859A
CB9525D1CCB83B61A2776E22B28C42CC3C663E06BE10DED75D8F2FB3E7795AB7
F3C347793EDF3D576A32450F96807FC77ADAE2F8C821D3E064E47005A1DC91F7
1AA0761708A810FDA4470AD156FD830B40F399E09D6ED3361C1AE2CC93549BFA
BCBC01B7F48E1CDAB86B92AC413D7AFD0396ECEFB8BA9F0C26F62540D1204117
1D81141D11723040FBBCC188456B2DBC0AF4DAF6C483B065E63BF3BD5C6F0188
A63B89A7634AE008BF173732306D353D51DEE8CA336F403B523493830C3F549C
8B9A96E5EA51EF691A7C2C293C06C201B9B5CC3F79FBD400723580D7F4A60660
78DD0B1F4828DD4294AB69B93E0052029F6878AB05528B55C4000B1ECC7E6291
749D14934FB88748CBFA6ABFD46354A5F8803858B1490569B5A040BA95A0EBC0
690FDF57B748E6CABBE249EB788125D3791021CD5F0FA6EF89111B5E7C361E25
B25273999E1C12322EFE33BB7369FBD1F4B842E6B3E2AC6DBCD8BD131016D1A0
B3AE844AECD603A37BB95D3A9A7353A1764912243FC2232F703F830568FE4422
16D8C436989D33EB5DD6DCEFF5176BEC100A4E8F2D37B01A7A62AAE391DA5701
4A86465C6055B7A8300B9D68D49CA8FE69CE41969679841329022A75A03FFFD4
EDEAD82DD87782111D9691A2F1D30DA05A233576B496146C0A5DDE83488155B7
5B3A187B758064C71A8FE406A0032012D1FB09A472AF03BBE424644231BAF219
94558F7A1C82DF15DC216444E4F08AA50ACDD3F710C2D55AB899179D4FA9513E
F89204104F78BE29BE6CA25F0D79C084D833938704E9D1D6F4313E9B3733B8BB
0433832F86FF288FE9E21835ACC894299BE2BF493BE20009384E9119793C361C
49C3380E529912A06E06FA2DC2C130DBEF1F0677825081D64CC4CD52E421FCE6
6C547AFE5D39BFA40A2025482EA10FB2CDC749565334AC1AC570CCA2584D68F3
F3C628A3DFED76ED73849791846238A3EC7BCEBA308C1A5C6CA04945FC77E7DB
3D6BB072A4BB35B103B45B46D1F4413B8462A0827071E9A394F993E20F9A0E3C
92F3F7A2C0459CC59B70220139AACCE2B00A83B25150A117CE2FEE52CD1EC8B1
8E403B72E3F26FD074ED4332BBD9FB4D4C9A58A83DA39498454CC444685ACB55
54F63A76A6BD7415F48C6B110DB2D886EA999A03958EF359B8E28B07BF9D616C
E43ECAEADC59348FE384629BACC274B93A3C8C69A27D76F2C4744AFCAC7C8CE2
085A04F824DFEA016264F9C2D65C84FA4972CD38E81AE5E399147D468C0A0B5E
65A33D3F305CEE68D98C6F6C32069CF149FEB864AA275D8B6CE678CDD85EC658
BC0397A6818A8E3D1331455B14DE1CF28635685D6082B2B4FA9A307F1212D2FF
61BA578831F6DCD83E3DE7F2D2031DE5EDDAF49406793F9D78302E9F81B5981D
E02BC3C11D3BB63189A3B0A236BD9A13C5D769872F0C6D7ECC23E41D49057243
951FE017D0B2FC628C89EE0E2A3E569EC7859F03C0DCA9688ECF80BFAB5F2110
DDE8375E04DB7400C08536A2380BBF0A5403E40FCDBBD59F1B6CD419435F7FE1
D25D9AFA80844A1D7CBF413FF153FB6FE0795963B7AB129339804FEACD7EE0B4
04D46BA450EAF7AC11F5B1B93351695DECF9F19BA86A364524C8EA222974AD87
C4C22063589720A360603D5524B3D18FC38C6454F6FF0D55A7C1ABCF2B208052
B7CEDD1C84EFA3989DF2580B1587DE7FC851D51E8CA8426DDB9C64176C57B793
DE5ED5EE3077AE566CF3073682A0032AF32401F075DF52021F10240A9187A23C
0D876AF25F64E915DCCA5125EA537C6DA2EA1EA9127EE8E54342F17EFDD4D05F
25101241A8B575AA194852AFC74714A4D045DE8C5BC15AFBD3E302286604A269
BDAAFA8B6F0480EC7ACE7D42235EFEE78BABFB1232F137F345EA91E885570755
5CA832F66434FE7272AB671BE6343DAD9AE47006FA88B02D04541F04ED76A494
AB7AC51512AF3DC0C3E6F5259C0E9D4FCCC4BE9268D77651497DCAB0A36B646C
E844E93DB8B935C1DB3AC28FFC4A2FCB31F3C3265FC9F7122080CE62B772A48E
158A09C1AA0A8E15193EA0CB92289F35994DB29DBE70A8694B2DCD29385E27C4
A6A52F6494EA0DF0B577A6E953B7A90CE3820ED9E661256FE729E82E11ACD7E2
38BFFFD0162D1454B348FED94149B8ABBC375BE6E032D1217DFA265A26D85FE1
835CDF7A30FDFF5F9C0564D893DDA0C238427B0A640B5126AB2217E60A8256A4
9CAE41B93DFE53D26915438607647D450568073656935C4DEB0B964C0119E3C3
63D7A288E1647F86E7ECC0F83D485ABDAD3BF5CC3B4058E7A24F993EA5CBFB5F
29F31C5BF329D14E4BC8C8BA1C80C0B2F887A22C1151298F863BA98FD0CD4654
6FAC367004697978C264598FDBFFE39F6C4BF48BB81781A9A5C0C3173894A212
289DA852A121B4C757102527F249DC50FD0B5E5CB8D4FC4960470A5E71BC5F8E
A877B19A7DF608591626C23C74091D1A954FB832906299B7281260E7083250BE
DDC576995722B3910C60E1555E1B73E5F8EDE1712D8107AF018BB79B91FB0759
4476522122DF6DD08B97C5F065DC87FBCBD31D8F59F9405B128C98348E0F7CF2
4A1E3CC2524712E55E899EEBEFAB546CD2C99218E7C869CD11E885558587E0F5
73723072744736B5180B28A449D36713019727FCE8F946F7D41C306A24F2CB6B
760D4F891068D3A41E603E656FF0467C4A403F9E1A9DBF1611423F7B4AFD32C8
F636E48BAF7B1AF81E0EAF66E7427D528DD38E37062E8064DC4DF6CB16873E1B
ADB0705FD26029B55D0A1B4B85121322176D4BAB2F01307432AE6B868DCE666C
E35447F89D923CE057951707EEC38BEB42EEDE1530D620486E0CEEA181D367D3
C10FC83F25DF69F87EE60C08460DB9DA21F1487D4923769BCD4AA2D9D0C3E698
B4A1393847F15B3D83E80EC967594181BF4FEB9462D4EF23B8B4597204A04248
ADCB1E0135A4963E4E4EB34CA0A93EB49A284165BDBBE5EDCB6A13CED6BAD166
BC00930C03C2E387310F946848B25721F670E8C73CE024D4194F63776322CA06
0FF78A90C96D7C784E48BCEF4D30698876695E86ED367FCADBDA1349E8700A54
BC1637302070F079B09E3F70E1F32B8C49E95A7FF72DAA04EFE56627DEA9F6F3
9DDD90C4E433E06A1F9C94E9B09B0926978CE11EB1A038F31D82DA374DABA137
9D39A86CBBEC32BB512B43E1AFF7CE69B255FE8AD17A1C7F693B12BD8E4BB686
3DE31BA29D8E521E3DBF683C91CEE3986182EDF3FF586AE9F9A21E5DB430E7A8
556472521DA7DEDBA0B17C2B457B364EC5C2D6081BC69D4EA24FB25ED2531C21
4312B271870B5B50AAFDEC0D92F54B642B87614CD1740C16513C89B6EC36A2AF
23EFCA28401A4BC00355325C5F4A02A989871BBD075DAFB35C9749E7F5C076D3
06043D5C63855CCA71F2D61EEC17BBACEADB147B4475597F9299E08545F72E5B
CB5683C0D6F4457CC433C8C51E7ED8C57C111BF85AE80B88E8F6B2C78D851D67
2F6BD9F7C686C454DE73D017E49EE32B929EE7782F845CA13EBB9661779E952E
590A23B1CABC2A0403A68E9B00D3CD30683E533EDF8E058C07CA301EACC2D7ED
E95FF7DCDD2A5CF0D2EA5466AD13942BA0D14403DD1F7DEEDC3E3656F9B60D9B
88F12DBEC7C183F1FBD18405A4C56F2EC725FEB5BA73D032C580A4C51ADA3B3D
4F9215273F9EFABE79FF3A677F511FFAB41E3B78A0DEB9311A21307164764971
412FA42EBCDF023FE9B7C563B96CA4E4FA4F50CB00C8C6874B3DED0FC2F0709E
68C392D3E19D0A49C29B0D902DFFCCC09F0313D7F3E2A19889AA1999A779EA03
A51CB060587E8A8A02C21A8D75C06B13D9A18502BD62831CC47FC2344DE37BD1
C1D8C8FC0457C5D430403628A20A9858026F6F81E017676165EE4882C3B89DF2
66AA9A77DBFD7EF1A91A16E0C68CFE659E9C92FAD72F02300AA694A3F4DF2204
A24D71E990EB6CA504FCDA473A2267370E4FA7E6339EEE1A0F6A83AF13C0ACE3
D8B17E374975336FD56478F41E744F88479F178D0B23D52D4916019B057CC050
AFAD3D634C8A93E4DC0AF60850CF210C6AA0EC9B51D817E05FABE292CD5E85B5
6B4FFEC43AA22BC3003F16DE12C2042EDE51DB4963A36A6513DA09151B488EA7
4E09876DAC9EB661617CD5EBC959CB0131B84D21BF8F38BC4DE9E8CF2A6E23AD
662F1910E8408342E3E3F091CBCF8F8090156E15768F3A42BB6C3DEE98760D22
B4D52B1D65F9A794F8BDA27C76E111A99C6CA9B7F0A5EBC8D8B8DFC796A98AE1
D99AB83D2E3A570CD2FB58CA489E434F6661A0990466AC61C21DF0DF92B01D9C
E23674225BB1502AD5AB0A58AC19B68774C2F2870B331741E408E0283FBDFE8C
EA10F021D2A1651B08AE3A5A4450F9EBFD1D01446BCD57CA6D91CCEAD12E7A08
780E14E66CB3B558A2CAD9CFD581753810FEA528C81A00FC43CB45B27BACE8E2
E9B8BA93C0E6116DCABD9901C95E7E43A78585FBC4CD7691EF90318D3AED2054
C761F1FDCF26E4F6A21DC9817D2EA1BA5EBB83D83FE45C6124E02B24415D70ED
8690205CCF8AD29666E899B6D26C15023ED883D081A46611872545E430AF2D62
B822EF3D857D00F01EE90D2F88A2EF2EA2DCD6A9A5AB7AF1B1819BC518E95DB0
7C1805B103C6E6FBCA13864CFC47BB7EB5BA8D499B5A379465230F8253A426D8
C2ADB561052DD324DE48C919959E553476AEC27B95D22B182C3900077EBE5862
356BB7761462357A71BF1B70D04605F493EB2E76C679F8980CD4881BBB217C5E
14CB46BDBCEFAADE9F0BAD8FE3B498405C9513568A344D52ABD19EBE6B7BB0F0
3E26619EA569B0283BEA43DC05EFEB3797A0776A72A14FCA717E0ED1D883F24E
F245C9E3392320A807CEEDA619EC32272FD0530BCA14557D0CE8C899AEE6BC42
9BFA009F3294B1BE257AB96C6E2B4350228ECFDEB05FD853FAB15725FB7474C4
E48CF89A99E25F9D8EF13AB137E226984AA32B1605028FC11B8EE394111DD308
F8D4C95A3A91D1FF0C124015050CE7B5E06D232A06B2357DB33C79434DBE8340
6448D3CD01B2F914D5EF18AB386BF5FF5AD7CB249CCC467608D0374C9330E4B2
BD9E9650AB4282B0E4A30FDC042173408A950F7E72CBF21A65542DE1DBC2DA33
F79E43229047E1ADA13F7DC96ACAB94F9AD881D943FC68DA443EB634110791E0
AA28AE61038AC3B0D74DCEAC9F659F41FB46A789C2A1EA173E553DA1C31BAE1A
3E10D09C6C13F23C12EA22842BE9CAE47DEA5D7770FC11B16CE9BF6885384761
DF1C751A458A3B9E0D62E7328E58677A4943D8CACA5F62D2D56D753E543B5CF0
3DDCFA79CA36022E8E4AB28BE8DE3E1F01D70DFAC00AD213288DDAB9504335F7
1EF97F91C4CD9EEA0BB5AC77C41CEE06774BDE5DC6FA361009CAB9E599DDB517
BAC9895483CA4D4184BEB564C1D95D7074D0CD4A8E0AB1C4A670804F49C3166A
4A5846B1DEF18E22D120E2B417B327368B60AFF61A1858308A1290141C780F03
2ECE06C039BA0B1FDC6685E56827B74AC9421B85DDEBCEB0365B529A43471949
844DC217797026F9338C8603F2A7BA43568F65CFC0FBA19EC53D1D2C974567E8
2683B24B33AEC9CEA60AB29CB44CA51223C3253256FD61139B92C914223F245D
5FA7653B5613F9D9274EAE6A2F73B07465016DE411283758A0C94086814C6EA3
AC21D11AB8FEC0BCFE643906E03753072AC13F3B1E8DFCFE00596DE80A7AD027
46DAB743897BE8F0CBC93AE7DFDEC4F2796DC3A676B339B033725311F09ED4EC
4D654CE6ACA26CDC231BBB9D8F3269D827F6E7881C7B5FEC120BE31743F2834E
7E8735EC8BD862940802F44EBE33F709A76BFFF20C8CCA39E942CE7CB0D37F09
71C42B77E2F2641099671E6A4232350BE3498E74DEC5C0A6D7B7EA743CABA887
6EA0888558DE44B2B32C0FA868D7A5400E41C69FA36E494A497B555414E94B7F
FC5C70733D4E6AE13AE5F25382E21DF2A1C23276066C0754DAFF2C177AD01135
67A2629BB0F26224DDBF85EFD48C31876C5ACB98771FA2F052DD94CE719E2881
8BF4DCAFFD7B27F109FEF37E809A9820A5E05E1F1F11982339DCFD951E217A92
004E606DBEA053A9B00B2C0613FD3B4587C6F02AB09531B6A2E459B0EF779370
E877FA2EDBEDC14D1CFA7AA2C556E6FB4F1E0798EA8CA5C81C8B4AE0D34F1392
BE8CE06E752BF1BBA27C4D8CF70C42A1222E012807B574037AA9617674287059
0D4AF976A4CB4BA39E50B1FB89AB52187AC17AA900C6C75739F277EC1C08EF96
431CCE2500DA56A83E0F91BB2DEE7B69867FF63558696BD7C98B3BF0E3662335
D6A3B830942DA596BF742E76DD3473E968942780AF83ABFD1CAF28E2B5DDC712
DCF5C7936C92E704FA92109C1E72F19408D4E6A7BB8E45F025C394712872FD81
219D5582DCFF3CF415937C96AF98DEBA5899C353040C4159646246516C79A371
88AFCA7474369FD6686A930092CA8989C7603CCE3E99B6741F85E6642D9AE328
14887A54A604B7701CEA0FAF4EEC0DB25AEDEDF7D1170DF3663520031244C144
26E8E45554647E86CDE11CB04374F9B660D8251E101FA088CC3480EEB16B098F
E439327747E92A9264E2A5915C2CF7667A5CB63468837A45043855ACCAB881A3
3C3EC2C734DEEF7256CD6B00A32F65E32D8B4EE4F9357CA662AFDB0621E1C148
69D48B095AB24962FCEE2A073A400E183C1E0B9DED2B9B5D7B962010EBF87B95
B59D6562122EACE3E39483B194155AD6E8794EE7688F4F417805EAB4FD4F0C8A
C634DB5A413123DDEDB99C44495DA2DC2BEEFE36316B1680CC1248B56FCBE28D
EF6060BE23D7728EA7FF33E189B0846FDA2818E93AB2FED5E1AD78515B6BFD95
9B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600
(threshould_accuracy.inc.drv.dvi)
@start /Fa 169[48 86[{}1 83.022 /CMMI10 rf /Fb 133[37
44 3[46 32 1[33 1[46 42 46 69 3[23 2[25 37 1[37 1[42
11[62 4[57 65 13[62 7[42 42 42 42 42 42 42 42 42 42 1[23
4[32 32 2[69 14[42 22[{}33 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 150 1987 a @beginspecial
0 @llx 0 @lly 324 @urx 202 @ury 3240 @rwi @setspecial
%%BeginDocument: threshould_accuracy.inc.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: threshould_accuracy.inc.tex
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sun Apr 27 15:09:08 2014
%%DocumentFonts: 
%%BoundingBox: 0 0 324 201
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (threshould_accuracy.inc.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (xie)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Apr 27 15:09:08 2014)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
0 0 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1020 640 M
63 0 V
5097 0 R
-63 0 V
1020 850 M
31 0 V
5129 0 R
-31 0 V
1020 1060 M
31 0 V
5129 0 R
-31 0 V
1020 1270 M
31 0 V
5129 0 R
-31 0 V
1020 1481 M
31 0 V
5129 0 R
-31 0 V
1020 1691 M
63 0 V
5097 0 R
-63 0 V
1020 1901 M
31 0 V
5129 0 R
-31 0 V
1020 2111 M
31 0 V
5129 0 R
-31 0 V
1020 2321 M
31 0 V
5129 0 R
-31 0 V
1020 2531 M
31 0 V
5129 0 R
-31 0 V
1020 2741 M
63 0 V
5097 0 R
-63 0 V
1020 2951 M
31 0 V
5129 0 R
-31 0 V
1020 3162 M
31 0 V
5129 0 R
-31 0 V
1020 3372 M
31 0 V
5129 0 R
-31 0 V
1020 3582 M
31 0 V
5129 0 R
-31 0 V
1020 3792 M
63 0 V
5097 0 R
-63 0 V
1020 640 M
0 63 V
0 3089 R
0 -63 V
1149 640 M
0 31 V
0 3121 R
0 -31 V
1278 640 M
0 31 V
0 3121 R
0 -31 V
1407 640 M
0 31 V
0 3121 R
0 -31 V
1536 640 M
0 31 V
0 3121 R
0 -31 V
1665 640 M
0 63 V
0 3089 R
0 -63 V
1794 640 M
0 31 V
0 3121 R
0 -31 V
1923 640 M
0 31 V
0 3121 R
0 -31 V
2052 640 M
0 31 V
0 3121 R
0 -31 V
2181 640 M
0 31 V
0 3121 R
0 -31 V
2310 640 M
0 63 V
stroke 2310 703 M
0 3089 R
0 -63 V
2439 640 M
0 31 V
0 3121 R
0 -31 V
2568 640 M
0 31 V
0 3121 R
0 -31 V
2697 640 M
0 31 V
0 3121 R
0 -31 V
2826 640 M
0 31 V
0 3121 R
0 -31 V
2955 640 M
0 63 V
0 3089 R
0 -63 V
3084 640 M
0 31 V
0 3121 R
0 -31 V
3213 640 M
0 31 V
0 3121 R
0 -31 V
3342 640 M
0 31 V
0 3121 R
0 -31 V
3471 640 M
0 31 V
0 3121 R
0 -31 V
3600 640 M
0 63 V
0 3089 R
0 -63 V
3729 640 M
0 31 V
0 3121 R
0 -31 V
3858 640 M
0 31 V
0 3121 R
0 -31 V
3987 640 M
0 31 V
0 3121 R
0 -31 V
4116 640 M
0 31 V
0 3121 R
0 -31 V
4245 640 M
0 63 V
0 3089 R
0 -63 V
4374 640 M
0 31 V
0 3121 R
0 -31 V
4503 640 M
0 31 V
0 3121 R
0 -31 V
4632 640 M
0 31 V
0 3121 R
0 -31 V
4761 640 M
0 31 V
0 3121 R
0 -31 V
4890 640 M
0 63 V
0 3089 R
0 -63 V
5019 640 M
0 31 V
0 3121 R
0 -31 V
5148 640 M
0 31 V
0 3121 R
0 -31 V
5277 640 M
0 31 V
0 3121 R
0 -31 V
5406 640 M
0 31 V
0 3121 R
0 -31 V
5535 640 M
0 63 V
0 3089 R
0 -63 V
5664 640 M
0 31 V
stroke 5664 671 M
0 3121 R
0 -31 V
5793 640 M
0 31 V
0 3121 R
0 -31 V
5922 640 M
0 31 V
0 3121 R
0 -31 V
6051 640 M
0 31 V
0 3121 R
0 -31 V
6180 640 M
0 63 V
0 3089 R
0 -63 V
stroke
1020 3792 N
0 -3152 V
5160 0 V
0 3152 V
-5160 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
1.200 UP
1.000 UL
LT0
0.00 1.00 0.00 C LTb
LT0
0.00 1.00 0.00 C 2700 3629 M
543 0 V
1020 974 M
645 0 V
645 36 V
645 143 V
645 613 V
645 427 V
645 559 V
645 602 V
6180 2291 L
1020 974 Box
1665 974 Box
2310 1010 Box
2955 1153 Box
3600 1766 Box
4245 2193 Box
4890 2752 Box
5535 3354 Box
6180 2291 Box
2971 3629 Box
1.400 UP
1.000 UL
LT1
0.00 0.00 1.00 C LTb
LT1
0.00 0.00 1.00 C 2700 3429 M
543 0 V
1020 640 M
645 0 V
645 34 V
645 375 V
645 541 V
645 701 V
645 441 V
645 648 V
6180 2291 L
1020 640 Circle
1665 640 Circle
2310 674 Circle
2955 1049 Circle
3600 1590 Circle
4245 2291 Circle
4890 2732 Circle
5535 3380 Circle
6180 2291 Circle
2971 3429 Circle
1.400 UP
1.000 UL
LT2
1.00 0.00 0.00 C LTb
LT2
1.00 0.00 0.00 C 2700 3229 M
543 0 V
1020 783 M
645 0 V
645 35 V
645 159 V
645 702 V
645 537 V
645 544 V
645 487 V
645 -39 V
1020 783 TriU
1665 783 TriU
2310 818 TriU
2955 977 TriU
3600 1679 TriU
4245 2216 TriU
4890 2760 TriU
5535 3247 TriU
6180 3208 TriU
2971 3229 TriU
1.000 UL
LTb
1020 3792 N
0 -3152 V
5160 0 V
0 3152 V
-5160 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage

%%EndDocument
 @endspecial 745 662 a Fb(Optimization)771 578 y(P)n(erformance)925
495 y(Uniform)1629 1928 y(\026)1617 1949 y Fa(V)333 1055
y
 gsave currentpoint currentpoint translate 270 rotate neg exch neg
exch translate
 333 1055 a 84 1075 a Fb(Accuracy)27 b(\(\045\))333
1055 y
 currentpoint grestore moveto
 333 1055 a 2686 1824 a Fb(0.8)-376 b(0.7)g(0.6)g(0.5)h(0.4)f
(0.3)g(0.2)h(0.1)-344 b(0)400 427 y(100)442 865 y(90)442
1302 y(80)442 1740 y(70)p Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
