%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: threshould_rate.inc.drv.dvi
%%CreationDate: Sun Apr 27 15:09:01 2014
%%BoundingBox: 106 485 407 676
%%DocumentFonts: CMR10 CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E threshould_rate.inc.drv.dvi -o
%+ threshould_rate.eps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.04.27:1509
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 86 /V put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176676ABB71BBD0EE56B4CC492C0652750227CEC4A51077DB938FEF83F6E
5A64435CC402154C9EFFA4B2C86145E03C127971D7F8F53618DE7AAC033F2D01
28181D52FAB2BC5DA2E18D8CBA3A80071CE07D89AB60CAD18751A9A0A5C89DF7
11AFDD1776B8C6633CB5FBA284F1E8688CFEDBE3666F319D5D3A7DAFA43EDA6F
FA9C1B6BB73112DAF10C3D28451517D3FAD604BCECDB579F299B0D0444614619
48A6E80BE3103A1630B17D1DE04FE8FE803ECF63B8DBD1D453B4EF2D5D828C88
27B4BE3DC6458CBE3F9F2A7E398FE708637EB4D1C77BF989C65DC5EAD7D343DD
DFD0396FF49DFC4690B97D3A15B9AACFD7212894FDB0B25A71A3753FC6A5C290
A811C8619188A472E00FF68B3F5F2D6E669851C071F69D68806E596757774D1C
92B387A4953690E50F48B606316DFFCC9004E6AF71A0B6342008C410C9DD0A28
3B8ACE2B4FBB51AAA1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /macron put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 67 /C put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 85 /U put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEE09555C11E6E295
71B219B380EE9E5BB17AD84B4E8AED35880BD88E5AC7D9FE25C46889CD093396
F0E34A62F93E64C8E7975CFD617121244AB09FF9A4F73F8166197D0CDE2EEBB3
81AB9BD8329579C2122368F56DEB89BA6E42C5D9E20F2789CC4A89E4AD9B877F
8A0ACB84936F109D86211169257C19756A97E682601F4D1E7ED950A351C14DAC
4BEA7FB0E58FB5AEB55BC09B1253748B61B4E00C448F263458BF958D3986BF18
9636037E95FB425AAC96FCED5B4C766F93041FAA0DBB196B0A220B8E3A9FCA6E
B4F5C0C775C25AFF4F5099CD3A2FA59ACA735718F8E90B351B015320794A89E8
4C34F32B465E201008CCC0A15C2DEE572BDA14D8BDDFCF2743A15F8A93386861
828F6251F206B9131C951D1ED4364A9CCE507E2959A1DA04A777B592888D38ED
E68FFB3EFE83870BA8E674A8D39B9719FCB800F20B4DE12752EE2918AAC92F1F
C0BFC9D5A0A7A366B4FE0479E6459D51AFE0544DEBC72AC06DBB214C1AFEFDED
AF5D6C0FFABFAECB6D36D2692251410822D198896BAE3EBE9010F5C4F1182968
1B133AB51624D4605C45B517E8E146FB1AC1AC386AA9509E3A4F35392E0F5BC3
E484C073509C3C5D471C4C9BC04703620041E4C7F5CA111DCE9661133EFD8124
DC576629D21415657846F9E1CD520D515128F8B2FAA728C4A18A407BCA4DB8D0
84259D60B1679E792F5CFDD750037E52ED37FC3A7908588D629C293A68A060BD
F3965C4EBD3FBDE0CCE8AA0AB470074F85278AB68C4DB8FD51C7D65688BF38DA
1C5C7A2AEC6EF7FF5542CE8F9FD591703D3A1C188354695617AF56DDA1FBC56D
BE8227308F8EB14FFB35630769FC6BB89CCE98E672DAADA229B2195F29379C4B
88C50DF01F591763F16FE1D2F94B1B997B5F1221071122721945DE6356BA976B
0D3EA0CE47D639124372C2BC18E9D22150DFE310811222A6DAEA963049E639C0
A882434ECC22F169DE18F4B6313B68BDEB632296ECCEC5600D2CEFC463478E13
4BB12B181A80092C9ABE53C544DE02DABFDC209098477C20E0AC1268922E5D54
C2BA2BC92C2FBE48518108BEF671E31D119F62DD73AE9F23D74E8BDCB427C026
8ECD03EB4698A8F22F0B10EE7934C215451BC9D441EF8278B9D00EA80C581BD5
8F313EBD16469AB8F2B0A5FA8D5B171B8A6D64491ED0063B799CDFEE8095FA36
EB42FD653E61511E57B2BA8186024CBFDEE60C7CB9814C6C2C6E39D1D0B92535
E1AD7D9A1A42782A51E5A9F8B926969D1F898B5F9A7DE36FF3A32F6B29B0EB59
19C7F2BAFF5BB49D056B0E47418F4857EDDC862197004F05805316BAF3A83DAB
B886B3CFFA939B75E62A6C4E06B119EA43A1C3AFCFF057FBEA2A898C1066C350
A299293F09EA311F49295310B0C6A4CC4A176B717EC0FA5C6E09E22A78619D50
1951A35074170D8F48D0F4DDFACE238F31C8D53050F1E3F16FDEAE6A34ECDDB9
C87ADD12BBA280B3FB5E8D41B6FEA0D1640A0379C90B754D8EFD1F9CFF7C504F
C79420CE8687F60FAB8BA54A52D020825F2C10409BB9F060A15B4B2EE025D3BB
4F95B05AE9195E12DF81F129176B00E8FCF6830E7D7D32D1A1A59CFF5390F343
D992EC0F7A24F7DB75D206E628CB5404CC2ADD5DD382F20C84579DBCDE7A49FA
840BDE55851CE353E698B6F8A29A78A1B7632EF655639FD55DB6701AEB98B352
43EF0F5F31AE82A9FD2BC97CB9E815A9174EC1B30B43050668EFB50CDE22D3AA
8A33DA44C392B576B05149383CC281020E00C006C194A23F204CC5458268A5C1
8903754D52CEE982102355EA689DE9A79F0D945C813FFC730257D77CD2607B1B
E30AAE1466C013AC8B19B65B4E0C91026341077C8E1D40F59C98E5E6DF33B2E8
675FBE93ACD86583ED65CA63FA50EB9838BE8326CDBAFDE0703BBA4830E738CC
90181FB44DA592D35884316C086E6916268D470B02044A54A9E75027776AEAE4
4F61017E7629DC8D7BE818356F17239FE88A2243E50D5DCB08C38FC55AC6B57E
01DBD323D32E439E59D62FF5E3396E5AB6EAFCAF23AD445AC2AE3B05A51CDB14
2356FDA139168DBD39FD28428703D5702EA04D301256F99C5E9542C2813FEBD0
9ABC8E02439404869F31BEAE9F09A8E163B36CB6D43B8D04856F76D9F1A0BB6C
27AE56BE00BCCD7460F54185A38B6DFF646E56DA7C89A98AF82B64E1DB8756FF
CE8775B36CDA8E5B393274CF281B21218457EEADA6D14E03E048ABCE54DAE2BE
47CF4B3643CD55FCF5378AFAF0E19C23EA19560FE38139E38DE9736E8F32695B
C5BC9B15813E002ABC24BE5A588E2734721360061322374CB6B9B5D12AB2C21E
C085A09B46E3694E8A0485BD720F6A6344A2322E6CE6BD92EB98AA573F0EA3D7
8AF66FFB53A40763C696BB22FEE9F07F6C09469FC5FD94F80C73D24C51855B1B
35F153421EA101D3E72B834E7BC4A925BEA5C3D9B03EF0F4C653F14878C5E100
6A70D3D7D2C0F2D5F535C158DA0258EAE9F47EE1D16ADAFFCFCD5D1AFC6D721D
EFED74C997E5F50D3FE75FD491C8B5EF1121DE9C37B2FE82C2591DE2FD9088BA
64B8809CB200D83BF666A961FEFC65C4766CE584ACEFE124580B765973B0D3D0
DC038AC89390293003D0A9BBAA6A5F044EAE7DE62582A2F342009E5B3CE4F49F
1FEC0CE053489DD345646644718BAFB81666E56DC66F63975C77E2B619654385
16DE5B6DA83A364C5350E2138C99F1E497CB8E9F3DCBD59784F6017D4723B4CD
E1FE68E6D939AAA8DB33A38E6E5D2D9D90FA32667F3EAB618541F524D267FD16
F8FDB5E2FA0A32F75A62F4A5C3DDC9DFF51293270C4DF86B867844F5F7976C7C
731E96DB37BD828350804032B4DA9FFE88E2EE42FE7475A39A55B1F1A915E6EB
ABA767E7D7551561466DDBD749399A39931E3400B4FAE987E5BBB4646143B3D9
79AF03CCEDA6CA992A3AF840667AC0C67D25FA1F9295B3EA5B4C8201C6F3E5A7
C892F363D3F0C6BA53CB277EAE2ED1EFCAD33971CA3C594536631E1CF25B2CCF
89E36F6C45CF15C62852DB476BA927B318DF1DEAB55C0EFDCEB590877326CBD0
4E680808C16505E10911F3D6A73AEC0534CC7C685D5C51B95F828DE2AB4C1627
F4144171E8ED70E75D26377F5EB9F066EBA40FEE4A8DDDF368A4322E55ACD395
659DAFC96EBB50D60D880F5304B309A4CBD753178603B87714C7E530F44C92C4
0BD95B5C121C41E285BF38551FCE18AC0D93901309F28FA6B696431CDB9A79DE
5AA3FD7610B841B8BB6951576AA876BD044ABA624F7FADEBFDE5B99AB1AF50BA
A729BDB0F8C4164D344C6B08C61031D07B2BC965F28D2065BC94DA3BD063828C
6B7FBF5A3E9873B245AA58393352AA6A9285F1E77FD2571C438197632F28FB0B
6E2C356DD589BA77746FC959DD555802FA78EC393E016D4970763BFC12344A80
43A6B34FD63CEFC38A293BAD95C391203C429FB2D919EB5865AC36A65443D5B0
62A13383D50D207319BFA2BD035A852CF863740DC192D9F2935F322972B312FD
2496B6AFE7F975CA5D919218C64FDA0C562DA6C7DFFAF544437F48DB40997FCB
3E165618F72E135A3F0F6C74C0B0991308CF469C1180E43C5A7379CE28A9F062
AAE9BAEF4ADE6C34EC4852EEAF9B1764BE5E5E654C0DB66950CC2005EDD29765
966B9B7E07A4507BCEB1F307A853DE55BBF73F888B840597EBA70A514A28F1F7
72FE5F68231C02649F39615D09F27E64060A635D2D2DA37E567AB43575C7BEDB
017759A5B43248F1847B728990708B59C51F75FAEDFF3AA63865D1CE1FE0C7AA
0E6D54655053BD670A6EC540BBEFD4B7371BE1AFBA2A44F2DF904939296731A0
5BE48247046DC6667BA5AC3387EFB094B284FF7AA59F1CDABC473F24A54C2DBD
FF4F0BE4194818EE2264B00E9A006D33249211A8F13759190D49AF18AC8EAE98
FD6ACF649B510753A7B316F26233D728BCD8724BE54794DBDF7EAA907E56307C
FA6D76DFD93E993F911CFE52D8D39DB9A8FCC094C3849AAA94AD1DA938B6154F
BE8E12478FADCD9A9BFEE8A37AC02FDB0249360E3DC2F7B3CB76AB542EE9DDB2
13C2A02F815AC5F5951625AB15C90980ED3473D1749E181DC244457FE93AE1E3
CA141E74C6A3C758806D2599AABD6EE8C806CB47D4E9420D9A695ED5D6A97459
15D819524DBD108721F202C0178227F51D19DB4950275DE01EB2B1D4A6BE1022
B3E6CBD23B57D22E48CBCC8C42A9C06A0EC99284225A3F18936FED8AD3AAF376
DF81B58E688F78773E4A4B011CC703040C2AF4921D0B5C3EBC052C26E69E784B
8BAFABECFE19783A0E0D697584EA1B39B9EE57274F8571D936C83AB82A83C16E
A1CB652DD9C16F3D6021EB33800B9FFF7E4B65ED4C08AADBADB51AFEE2AE94FE
E2C18E188CB8731EF7C0D109A8956101648D7DF11F6868D4E841F72642F20387
74515C65AB7A7B26709863685FE977EB456CB4B46DAA25F33BECF5ADFBD4323B
B26963DFD11FB623C4482360C89BDF2A83722387AD8042EC9EF1F37D2ED37AA8
3A20815395956212D5D47AD046C4EBB932A34B82FA19020E01003AAC7C3553CD
811482311C7D08B3843855DCBD843D353C87C6B59248E3B932B0F06942F02340
4F983FBA0801ADE87F1BFF9BCC10B38FE6D342975F47DCC65A8D46F54973F0B5
4333F9756B21B46DB38409282574D2F4D5C359818042DFD5EB6200F0322D175E
9957272630AB8F600F4CB752426412B1E47D8D13268B8781A77427532F43CC6E
372410C5ADFB4F81FE42D3BB36C43381248E59C12B6D59A65907EB27BEDF566E
A775321453A00F741A0011E341A86C45A9DCC5C76F8E4880F5EB5FB4F5F3C628
A3C6BF132AC0F430B01547F3EFC6D4D0829F055DDA88C3844FDD51080B978AED
7F3264EF550A278ADD24D86603224CA38815A1610817BCC38373882EBB7346BB
6379BE9BF6BA53DCD25DD6D5288C384C317EC20FAAA25A3C1B365E9430AA6101
5D0913DA75D12C7C5CBE20E25B583985AE960DD6B8E2C0F95C02381360036697
CD0A663E3CC5327FF94D6A3EEF180ECA2458E9C6FD808D43988288D063875FCF
F02E2E637CF7C82C27B8D151595DD14E11A0981727BDC01839FC8147BA8C0898
9B8D641E4199A159547561706D449526C0DECE83419833091295564B53D72B3B
D6CBC138DA235CF20DB2E86F0BB3F22DDD6172457221164A5B7C7D1BCCE89E30
30E03AA39E73E527A1E796ADC3EEF5FA86F187FFAD37808602EC4C11E599A245
1402ED05E353ACA979A57EABF5BFD7C0269113ECCD9FD7B39761B573C5022436
5E8AC84B3F6DA54FBFE696A50AA3AC0F19E48DED17BA057D307603B8A41F4D1A
D3192658CF6FD9C87A03A56999F0FAF955A034661CF98BD8DD9C765FA92DF235
1DF5CCF18E863B087C4F0E081E69B488F59D49F52F12C217D44492B2DA9A38CE
AE8741D10070794F813C2CE78F77ADE9ACB359C6E0490EAAFEC7FD577386F3B0
D229426F17E01071E726AF51C39ECDDCDFC0D5C3B3F90FCFF295EB72C13E9DD4
F9F06FBE611581363761EA2237889BF71BFD8104DFE75D5E5B0CBC8DB4FD9E1A
10BA562C8974E7B1D27E47A109B03E30B3EA437B790B1CF5E8B59BDE835AC482
F54267B2BF5E41389FD20107A519ED7E4E4427F0D136A6EA07650B8D6885A37B
D9C02BB15951E85FEE88DDB76AF9C94A647EF8BFD488FF2275366B34F2597D96
CA2AD7A1FDBCA2C38769C335A7F1F8762066D96C42F7C9CE0C1365A508E242A0
7D64677DA3E263A630422045F510B85FF4905534E0B6E87D06329CDF03533F47
8B2EAF9FDDA7E5163F7A42F5336D5830B9303FA2D22E438B83067F13536AED1C
069623A6668FE70194AF20E0DC4D8B64CF7A3FFE2F42D7BC7CC9257ACF8F4AB2
7F53CF53F6E041543617DFDDB9A4980DDA9BCF928982DD5223882DC97430D83E
FF9FBC5259F9CD2DA94E70A2A2D9376BB61E4E1953A51B27DE9A463BDEB060B3
02F781709B926FF8E31C23F3074C62C89888314436D8D1383206A752F80903C9
ED8FC1D6A4E43E6A3B23B4C7E53494799167B7B1397FF6DCD463D6A03CCA8C38
020DFC38A712726FCFDCCF82DD5A69205557A973F7D357E07D5502CB85CF7AC8
7E13DC14AFE5C78282D22E933944AEC37F5E3544AF73E79B8A7CF75892400F0E
1C4577E67CFB33886F9988902A6927838FDFBDD520C70664BCE0EE29CF91DCA6
77FF01BE1073E640F6B159ECBCBC5EF1008EECA0DABC92B63FE389609B42D947
123F0FBF8F7A4ED10B6295BF3AC15CBA09D981968F3266D37AEE2C8BD5D26651
94154B48DCF798D9E7AE721043FC7F48D815BBFDF2369D2B881F81396A57F067
35A2C2DF3886507C346F40934B278D507D3C9E3FF7A25A3AF5FF0F9032D256D4
24B5198342925DB630D529614C4D9822FD243E7F3426308C42B02A382926969C
2FA82B12DDEC116C4E09B5E153B93ED3BB4F2DD28B530BF83AC33C8C05CC25D6
DD89ADD8C64D60B3256A9DB7156D140CC819D73C3F038738CFC6094219FB835D
520195E97B3079F2A4FE212FAAAA70605F676D6DE0154497BF833A502CB82C81
A4D7F679BDCAEB75EF0EE96CA622A56F9D2E9507465F766A515D132927317440
E31EBD5A5BA8DD40E44124AC55F46D25B230817A9DD494DFD89E7DC428BD2501
6C832B10536230751D5738F1CC0D3D7FDBF6CE6727C01FC817FDE74137F7A27F
B0A7E34A2111F2D4A3C1C723D7268C071F2E957FD1F45A39968BBF52862BBCDE
7A0012F4B93651CEA3982672A421FA9C816387A8ACD5917C54DE19C568129784
F09828F31E51F4AFCB9EDAB6ED99001530C53EA02226798367537537A9F0B0E7
FE24CAE6906D79B4E97AC6E9EEF10C619BE653AFDBFC3AD0D786C8392B1DAAE9
AEEDA68BD8994CC8DB85231A371B4326BB21436D23FF0037345E104D22DA52B5
0657661F8E841526F82DDB24B3A47F2D00850416242FE14635B7891FC69B84FC
37FD5038E21C6EA55CD4E6848C0619D3CDA6C9AB4F011EF94CD8C83151AF0646
803EBF603339DE1D3887110DE555628F1706BB69BBF2C3AE685D54BE163146D8
18D84DAE2C2B81BC8CCEFB1AB8AF52B250BFEC5F68FB2653A5BE51C088E83343
1700AE58DD5F91BA825F3FB19BAE6ABB227E27FB809F380B94040FF1AE4016EB
DAFA44B0FECBE3DB37CC17A5A617B96488F4B11A4D60981600F7C2CCCA711828
345FB08DCD77CF2DAE42B7701C179BDC530AD423A0BD3D07788E8345C261F21C
EEA8AC3F49D01EEC48227588C0E76FD8E7BDEF7FEDEF0C2DFF5CB3EE76428402
6B83D2240F6C9166046BEAA9A6FFB012A455A9EBA841D11D9DE31D303E9F0834
40C58E27AFC4515386304384989D64D56E21E55E5601A892B469BA6D1A3A4F36
CFE41F4C3CB82387932630D34EBB6767E88E8BB6A2D9B76910AA415A692EC3C7
1740FC02B8D72B4B05926F5831CC6B6E4CF32A57A419DD6D95588AEABF63E5A3
A29DDDF3A30F5E0C9692D638CED131297D233B5B5A8C3AFBB9C9C8B5B24339B5
44A99CE8C09ABFCEEC6A7CDD0E30552AFF29CACFF649D61F769E53D6BA1A76E0
0415D5346AC94218F6C8CBCDDE49681816A86F3D5FD23C22DE2A02622384A34A
759FFF9D91BE862F5F6A16D65C3DB1214984011652DEBE6A307BEA784F95C051
399078142E7FA1A9A7AECA960806BDFEE01CF5DB65C0A970E15BAE80CCEE3780
82D6805D4FC7D01CF0AF4CCB1F41086AFB354FFA23CCC3D9761E55C43AE15728
FEF30775BA6EB79DC869848323FF0EC94A390BF679B9FFC9B4A6D9BB457CB644
7E6463629D37895F5B70CA568F1A6052394D06CB6ED6679D316C5FB0C6AEE1AC
42AA9422BAB6F88F0E80312270288EB79AF64FDD757C5F98FBFDD5CCED384518
9BD88A0B8A512271DA82282CE0F8FEE7A7B71731C3506AD9D543111F5E88C0F3
180BB82AEB3F61CE0B30791B1278B44F2D921064A84DE797D3AF1495DEB1221E
27033BD59BC6A8E3271038DCF4FF0F64CDC33D14B7CD14002CC9F2A9E9D3A0C2
35B2348824014D6E6388F68BE253B71CDCA639082C89DD7266404DA5ADCA93FC
312E33C3F34E3B086A38BF5F913DE8E20059AB1691D9D57DC9AE2A6935518F9A
8D9933F8A8A5945565A76BD01155BB6CEA018D4B88D3D92F04893AEFC272660F
C45D88955B613541612CFBC57C4FA41FB135B6F42B9B4335FC235137C2816A7A
676A60E22340E45911E4706FAADEC62338AD017DEBEC24D51C1E13718C9E2644
1622AA600988882E31851DE4D7FA4F54ED27FF5DEA678D1496ED4570FB38768A
663620987FD34F9F684E8443A30F9EAD74D7150718294FC815F6636272F7E089
1A37698C5495AD34752ADFF8007AD2E9D054921483C47B309F78A5B66F718607
1BCB3FD86859BFD4713C8E40A88A13F66ED61F12C9E97D18AF6E73038B43CBB9
4B2DECDDB323186E55EE39FAE9D8B57B475C507EEDB0352BC20E66A10E92B7CA
5885B50C8709D763DB4BAAE1D2E0F6A8FE8F8B6D79E43335618DDD85B5997C79
FFB59226C10742A5FCB39400726DAD43975A91F295FF91CFC545B0EB7EF23DF1
0D076560B69B43179CC98573AB10F2B5DD6CB8BAB95516E16FC63CF938312A53
80EF12E705345AFD89733957F6081BB17395757C1D788572EC4C0016D16B7828
60677757B85D49EBA240B3913C74CB062BB9AAF173C1E0FF29500FDA25783554
537C040112CDFD0DA6ED4BB2A1CE3BD54B548E9BB5BF6DD5DF51455531B5D008
05FCA243F85295D4899A031D6FD254406A68E511DB1B2E9109E2A8D2627BC306
43D7749FB62349081BB8878BC437921E14E1A67326CF6A45F4A2AB786ACD78C0
3A69EEED60BB6C67EE07947A61E8F1566E9EAAFEA78E83B3EBE1E3837B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600
(threshould_rate.inc.drv.dvi)
@start /Fa 169[48 86[{}1 83.022 /CMMI10 rf /Fb 133[37
5[32 33 33 1[46 42 46 69 23 2[23 2[25 37 1[37 1[42 11[62
2[61 1[57 65 11[60 10[42 42 42 42 42 42 42 42 42 1[23
4[32 32 2[69 14[42 22[{}33 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 150 1987 a @beginspecial
0 @llx 0 @lly 324 @urx 202 @ury 3240 @rwi @setspecial
%%BeginDocument: threshould_rate.inc.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: threshould_rate.inc.tex
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sun Apr 27 15:09:01 2014
%%DocumentFonts: 
%%BoundingBox: 0 0 324 201
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (threshould_rate.inc.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (xie)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Apr 27 15:09:01 2014)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
0 0 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1020 640 M
63 0 V
5097 0 R
-63 0 V
1020 766 M
31 0 V
5129 0 R
-31 0 V
1020 892 M
31 0 V
5129 0 R
-31 0 V
1020 1018 M
31 0 V
5129 0 R
-31 0 V
1020 1144 M
31 0 V
5129 0 R
-31 0 V
1020 1270 M
63 0 V
5097 0 R
-63 0 V
1020 1396 M
31 0 V
5129 0 R
-31 0 V
1020 1523 M
31 0 V
5129 0 R
-31 0 V
1020 1649 M
31 0 V
5129 0 R
-31 0 V
1020 1775 M
31 0 V
5129 0 R
-31 0 V
1020 1901 M
63 0 V
5097 0 R
-63 0 V
1020 2027 M
31 0 V
5129 0 R
-31 0 V
1020 2153 M
31 0 V
5129 0 R
-31 0 V
1020 2279 M
31 0 V
5129 0 R
-31 0 V
1020 2405 M
31 0 V
5129 0 R
-31 0 V
1020 2531 M
63 0 V
5097 0 R
-63 0 V
1020 2657 M
31 0 V
5129 0 R
-31 0 V
1020 2783 M
31 0 V
5129 0 R
-31 0 V
1020 2909 M
31 0 V
5129 0 R
-31 0 V
1020 3036 M
31 0 V
5129 0 R
-31 0 V
1020 3162 M
63 0 V
5097 0 R
-63 0 V
1020 3288 M
31 0 V
5129 0 R
-31 0 V
1020 3414 M
31 0 V
5129 0 R
-31 0 V
1020 3540 M
31 0 V
5129 0 R
-31 0 V
1020 3666 M
31 0 V
5129 0 R
-31 0 V
1020 3792 M
63 0 V
5097 0 R
-63 0 V
1020 640 M
0 63 V
stroke 1020 703 M
0 3089 R
0 -63 V
1149 640 M
0 31 V
0 3121 R
0 -31 V
1278 640 M
0 31 V
0 3121 R
0 -31 V
1407 640 M
0 31 V
0 3121 R
0 -31 V
1536 640 M
0 31 V
0 3121 R
0 -31 V
1665 640 M
0 63 V
0 3089 R
0 -63 V
1794 640 M
0 31 V
0 3121 R
0 -31 V
1923 640 M
0 31 V
0 3121 R
0 -31 V
2052 640 M
0 31 V
0 3121 R
0 -31 V
2181 640 M
0 31 V
0 3121 R
0 -31 V
2310 640 M
0 63 V
0 3089 R
0 -63 V
2439 640 M
0 31 V
0 3121 R
0 -31 V
2568 640 M
0 31 V
0 3121 R
0 -31 V
2697 640 M
0 31 V
0 3121 R
0 -31 V
2826 640 M
0 31 V
0 3121 R
0 -31 V
2955 640 M
0 63 V
0 3089 R
0 -63 V
3084 640 M
0 31 V
0 3121 R
0 -31 V
3213 640 M
0 31 V
0 3121 R
0 -31 V
3342 640 M
0 31 V
0 3121 R
0 -31 V
3471 640 M
0 31 V
0 3121 R
0 -31 V
3600 640 M
0 63 V
0 3089 R
0 -63 V
3729 640 M
0 31 V
0 3121 R
0 -31 V
3858 640 M
0 31 V
0 3121 R
0 -31 V
3987 640 M
0 31 V
0 3121 R
0 -31 V
4116 640 M
0 31 V
0 3121 R
0 -31 V
4245 640 M
0 63 V
0 3089 R
0 -63 V
4374 640 M
0 31 V
stroke 4374 671 M
0 3121 R
0 -31 V
4503 640 M
0 31 V
0 3121 R
0 -31 V
4632 640 M
0 31 V
0 3121 R
0 -31 V
4761 640 M
0 31 V
0 3121 R
0 -31 V
4890 640 M
0 63 V
0 3089 R
0 -63 V
5019 640 M
0 31 V
0 3121 R
0 -31 V
5148 640 M
0 31 V
0 3121 R
0 -31 V
5277 640 M
0 31 V
0 3121 R
0 -31 V
5406 640 M
0 31 V
0 3121 R
0 -31 V
5535 640 M
0 63 V
0 3089 R
0 -63 V
5664 640 M
0 31 V
0 3121 R
0 -31 V
5793 640 M
0 31 V
0 3121 R
0 -31 V
5922 640 M
0 31 V
0 3121 R
0 -31 V
6051 640 M
0 31 V
0 3121 R
0 -31 V
6180 640 M
0 63 V
0 3089 R
0 -63 V
stroke
1020 3792 N
0 -3152 V
5160 0 V
0 3152 V
-5160 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
1.200 UP
1.000 UL
LT0
0.00 1.00 0.00 C LTb
LT0
0.00 1.00 0.00 C 2700 1203 M
543 0 V
1020 3792 M
645 0 V
645 -14 V
645 -230 V
645 -530 V
645 -401 V
645 -530 V
645 -759 V
6180 840 L
1020 3792 Box
1665 3792 Box
2310 3778 Box
2955 3548 Box
3600 3018 Box
4245 2617 Box
4890 2087 Box
5535 1328 Box
6180 840 Box
2971 1203 Box
1.400 UP
1.000 UL
LT1
0.00 0.00 1.00 C LTb
LT1
0.00 0.00 1.00 C 2700 1003 M
543 0 V
1020 3792 M
645 0 V
645 -14 V
645 -230 V
645 -515 V
645 -387 V
645 -444 V
645 -831 V
6180 840 L
1020 3792 Circle
1665 3792 Circle
2310 3778 Circle
2955 3548 Circle
3600 3033 Circle
4245 2646 Circle
4890 2202 Circle
5535 1371 Circle
6180 840 Circle
2971 1003 Circle
1.400 UP
1.000 UL
LT2
1.00 0.00 0.00 C LTb
LT2
1.00 0.00 0.00 C 2700 803 M
543 0 V
1020 3792 M
645 0 V
645 -14 V
645 -144 V
645 -501 V
645 -487 V
645 -401 V
645 -502 V
645 -587 V
1020 3792 TriU
1665 3792 TriU
2310 3778 TriU
2955 3634 TriU
3600 3133 TriU
4245 2646 TriU
4890 2245 TriU
5535 1743 TriU
6180 1156 TriU
2971 803 TriU
1.000 UL
LTb
1020 3792 N
0 -3152 V
5160 0 V
0 3152 V
-5160 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage

%%EndDocument
 @endspecial 745 1672 a Fb(Optimization)771 1589 y(P)n(erformance)925
1506 y(Uniform)1629 1928 y(\026)1617 1949 y Fa(V)333
1055 y
 gsave currentpoint currentpoint translate 270 rotate neg exch neg
exch translate
 333 1055 a -77 1075 a Fb(Classifcation)26 b(Rate)i(\(\045\))333
1055 y
 currentpoint grestore moveto
 333 1055 a 2686 1824 a Fb(0.8)-376 b(0.7)g(0.6)g(0.5)h(0.4)f
(0.3)g(0.2)h(0.1)-344 b(0)400 427 y(100)442 690 y(80)442
953 y(60)442 1215 y(40)442 1478 y(20)483 1740 y(0)p Black
Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
