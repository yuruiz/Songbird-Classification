%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.991 Copyright 2011 Radical Eye Software
%%Title: diversity_0.7_others_test.inc.drv.dvi
%%CreationDate: Sun Apr 27 15:44:33 2014
%%BoundingBox: 106 484 403 676
%%DocumentFonts: CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E diversity_0.7_others_test.inc.drv.dvi -o
%+ diversity_0.7_others_test.eps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.04.27:1544
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 68 /D put
dup 77 /M put
dup 80 /P put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99C5C63F2AF354D6D558EBE1528C44E2040F3412C67F1A7
28E5753F035E5BEA74E282B3BC4B1D6D30A3B7C7C23B7B83DD252E4A358320BC
9F127F0DCE2ABA2728E04EF38E58930E37654FDD73BF47D39D1E8727E9DDBA63
B63D7F1FB3806B69940F4159F723C18E89E9F85BB44B66FCF9A4BBFD76C673CC
A729412DD783FFF4C30AF163EF2E273FCB099FF6A42B59D893C1BAA30DD1DD0A
CEA39CFAA5E49001ACAE4F5C9E891A977437EE32D60741C7A175FEABDA80DAB4
1BF73EEE203D36CDFD4F1389C10F4F554EC270C3E559AF40AD4B8483AC051F54
CBC8A1EAE07099B16387554E948ED744BEC8FC75DD015D2DAE1629CFAC20E920
163F52FDDE3DA8E9FD9A8AE38014C2A8368C9573520C06A1CFFA00A0A0B1DECA
848078006E46E015111E360A1EEA6551076B53AF9F34FFDE33CFB211C49FE7A5
3D7D807E6272CD38C921577A002AF69C367F0DD4D73689183798A4A260509567
2AF4C48259422AD260702C4419860A94D0E467A9832EFD09AEF25DF62093536D
23CC3D95D3D147D7B7F1A1A101FCC57E7C01E510D507ECCC190832266609281D
85FCF8530FFB377CDEBC816B9E8F767240D2852E8CD9A9DEDFB8D1C18A2717AC
4A6EB4BFF31C8BA404474B0A98D4E387602D1192249E1FD65C395EECC5BD05C9
2AA7C03A7F8CBADDF1CB1141EF875F9CA417EBB26CDBB5ED1D1B305FDAFF9D62
40DD6BD1250026B98AEE3C8F2FA74E32541A96105BE1A2257B4D7C74F6EBE322
08A0F9C2A54C2223533E3493482391604EC3CD33EF1F0569FC6EBAA190E09371
A9BE0698FA2FABA3A11891635C74B0A3BE8F9F0C0FDE2375719E96286C528B38
EE9A2C2FB48FF04C76B4230E584DE6D4A355DFA4CFF9C33E90DE993ADB62B509
445112A20B27D94F1AA3F7B4A1FDC21D7104F2BC627789E6CB1E5323623C81E1
5B77312CB162333A5D72851079B3A0FFEA5ED7911F03E33773AEB31848A96FE2
EA1990E5255A4690269FF727E31A60107DF12D950DB053BB719CE9B2D2F75106
CCA90E75B247B1A6579AB200AEC405ED75322CEA6640DF3C848EE283B136672B
7DF5D36768699442FA88A289698348D3983805A7129BA23E655177060E916DF7
136B02A04679210579B4BC35B21D813C4A090BB25FEBA0D9F3DBDDC99AD06FCB
1C8A0CB73069B5D41809DF74497147DC9B688D11984F2024DD46B0A63CD93E9B
FEBDC17561C961E1FBD3669224116140927B0006722D41FB57E5D4F178ABAC00
92FA8359DDF19EB7A34B9635DC00CE4FBF5E132991DB4AC11A08C21C49113F9A
0824AA2AB4B98F9ECFA13CB47818603E9D8317B3CE91426583895F0D0A7BD59A
945D1DA7340E6EE05F775D01C1FE6E0110A2761463A33E4BC28D0C3BF8DD174A
3A32E988CEA98BAF8019ADDBE574C77D9462A4E42BF4BD42922C7F35A582A1B1
7E8001CD334C1026419DFF212FC29032FDB8AB82AB647E37FFF0C60BD95A08AD
9277E498328474F18F5DAA53A6C9D926A94CFF5A57F87725C211321306D0588E
35E006EFE73336E8AA6DCBEFF87A1EB5C17CF043DFFB102EF96C23D358C54AFB
5AD7CAD3F5026C81118D8FC167F64744D49955DBC2DC3031B138A20BC2562768
EFB92D7DF0A106ECCE5DFA44E02FA455DCA4D16CA4C83C6825C29CD588F64F55
B7C7A91235C11AFA8A6067F0EC80BB10E8605362269BF6B291777480C1F4985F
53DD3A7F1D19046A11D87FE08DDE7AD295E20D8F54D47FDEC6528929FB428998
68B81A0072C33B3934490B1444F78CDA91743DC93BEFF0E1B4DA3937BB04EEE6
BD58F7C1E8FFD6BC62F727586428569373542D065A398D6B8F275DE0F7F1EFDB
79787FE5DF1F019B56B5D692F1C8D83B06F8B24F8DCDCF392EE2060C2CD33554
7311DB14099B71FF2CAAD761C65B9FE626FC7284B4896BEC871073DE805F93C3
7624CBCFF66CF44CA7E643AD000C37E5E5E5DAD907A69D7342D11F0DF61E91E0
AAE972E5A79D5A23C2B8F5D8CC4781FAAC59FB8480E2D125B0F7E081A0EA8354
ACE620C93F3511A130F865B1D2C4A4B9BF48256D618AD0AF579062B77CDADABD
F6AF122975FE50B5479ABF1298F169B772E3F3716EA9326F2ADD9D25CB171F0F
3E104916E02D0651CDD202B86E7AF3C5B4DB0A9649D78247C8DA1613D56ECD66
3A1E1DD80411F26379EEA4F68830BA6D7686EA89E3C4FCF79BF1AC333AF25E34
CD964212B3D8AFB05E35A9E30A0C4F3C92D5CB65DD204087D3904D6D512F26FE
12B4BA791FC24C1BE23A286307DD33E38DE68599A9F33A551A67868609C90CE4
69CA46631EFE2FA95762DA1DDA4EFA0B440B3DDC1A58642F0A870CE2A2D053CC
7D877CC0F1D6E6DF257C78B48FEC4B1199D634363A2F560615BFA9251AFC2B0A
0A6321B08F1538B2DA77D70B300D05D9A2BE02C7B9BF79CE0968C36E7ACFB0AD
5C371C28E2BDFEC99CB0D75739A7CABF45B4A1A4FC60C5044C33B4BC50E27DD8
BB661275A0AA3306012559742474D1A944DA4631C6FBDC963416928DA6CD13E5
5153C637BC87227309B289C85EB55A7A28E840C62D64C7F59917C8AB590AEA6B
9905DFFB4B72DDD2837AB99C3193BE76882E48CA96AA50E6E45A555F61308B43
72DA87FCAA567E73E09A5925ED0870610DCBC68BC2CEEF98E690EBFD1B555486
5E204599F2008E34FB2177E34050A5F78DF63C88C8F536EFBF519A085816D0DD
47BBA83439C31EE448CE6CC7DED8827E495EC3D575ACEE6692DB1A817CA54A5D
9913CAAB9513C9EB01F2F4532CAA221FAE77464D050C5ECF7AE8A45930FE98E4
EFA53C37AFB5A199CD1ABA3028F603964D3B8AF8A1A1F4FF7A5B006CD2D8D5B6
0AF80973C7DAB423D91272D26F62E2B8CDC4EBB6B9A67FE688D2CB28D30CCC97
734AFC4B9EF5BFD0EF221BBA53F116C27D13B00377EFE6D3440958A138BFF54E
9074F90227AC44BAC160B0C63D2490B42ABC7B1B362B34E5C0D8D19CFFABB02B
F14827F7F1269BC24B321E91EEF163437C60B2ABDA9B4686A40B3F140F389380
E287C7F19152FA721B22CD655712CD8052A5DB31D3648D5C3E74C74BE609183B
0B7EFFC21F82CEEE3E8FB279FD1B3B8F4B8F57F84BBC2144D73008134E44C7FC
52F96C6053F5D480BC612615FB5518A5E132A21FEABE68C0AB086E5A42F97BBD
398A4349C99543A39993C7055A8783FE7FCB8BCADC22581CCE9CBA649BF0F13A
990A8A6208E95759EC37749D1445210D7B53E50865CB2B1E6A52F8EDCB9E65CD
A7B438367C3F7985D10A50022C4E3EB03182099597EE4CAC65460FB16998EE2E
7E00B349DDB3025C3BF4F51A7DEF22B3050B0861E91D068407829B1ECF3E429A
D6073A286807B3D2F7E4636319BA7E3B49DD2B57D8C00A1144CB51E63BA3F3B7
BFF4EFE78B3D41B0BDDFD5433CDC7FECFDD393FF292E32C718E09CE4D0C952B0
480E9D8F59E6B23126F0593F36BB14358B581DC2F6E7E732DCC0DFBBD4BD55F0
1D5A959B37EF2F8FA82232584D1B039CA7652AB6633D12FF19292C4F6ABF1FFD
346DEEA4295B453A897C74342909ED7096A1C2136858156695197EC6207E3A34
9C43EEFB4A9C2A4E4D83E33ECCB1F4D78CCD216DEFF0E75590B4429E75DDDABD
3662542D0D5BB9595EB0ECE42FB86BD024B202458461D6218687086BA0169E06
33716AF2B30C0925D95265E136784E1CE40633EB63EA8E77B953D2C38C426159
BF5760353E3C41AAB17C8B72DB71D0B2694C35330CB3F3A5F5E32161836F6818
B0F8DF42A53406B28471B6FB04CB22E829B6B4EF4D31FF23A46A61F17089D027
F583D2A178E68D9E1A25E92C5774F6CE33AD7F1F9745D853CF6C7A5B8C944BB2
F59038B9C079D6BA9EE39366E8D3B138DCC71F3AD1827FD19BBBAA2918B0A82F
866643AF26293449502D6436440C714D2F935F48760D16C83BC31F732F23CF57
211E607CE6D7DC23BB9DF162E93A1EC1019C2B9188520EAE42066E42ECBBC2CD
48C0DAAEDA422A45964AB9CE75F043806FFDD169FAB7EDACB5151EF41229AB62
2B98B36A5A65777BB06DFB4B816FEE1344570989B4A1FDE8FA11B0479DD91777
25D8F58444224BB75D4F6C8EC62CCE1F2609EA970D6BF1B05BFFCFD451B9C9DB
09D685B927106E98E87382411F3F48D27DE8B128FE5C2056E27436C66A32420B
46816E2A82F1B723992FDB29FAAD6888A608B2936358C206F0E1B351DE2C383B
C625BAF6F3E85497580206DC0B6C8B93515B5EC8A5AB51236F977A8683A2F2D0
4A2AD42B2497C92279A168D46D7CC387B62D0B8E1C2ADD8F71FBF72E2C184C9A
7B9BC7B03441A3654B0139C297A61658D6F350AF35673E1E9413E7FCF600DA54
90CFA812D995BF499BF02C15DEF680E5702593385540C31A917B430AD2278FB8
E93F78F304EDE84DF52FF1EBB860B4EDA8F6A0EE9163867D33E0F3AB5FC5D80A
31DC5A308524058782C670DC2ECA30F0D0EA80354763BBA1C76A01F5BDEA8724
CD644441009D5C71C1874D666EFA65CB0B48AA783D7F42197C169C4B9D0B1BDC
4DFB70E367115F467DB80BDFB463AE9546665B5EA872761885AA16A7FFD5203B
81E77D86A957B7B8ECE997289138E799E74404DE4C6710118D86F0B32E0D864B
0319A7E486C96568E7B50D0518AC4B6323FB673EF9D143CEA269ED9B7FA5F997
0432D8F815BA7E7AAA44DD2BF86FA54B570D5039A32B2CAAFCEDC3F40FEF1612
399E26F5D6346B70EF3F8FDD5C4246115AD682B080939F56549B9959191EF27A
D9F12BDDF03825E71B5BED4E26F1E51BAB75EA8DEBE01E951369F5827E16F296
988F2A8F81B23CAD1DFE40CE2BBB8F9A31F54D272BE7A4DE6C9133EBEBC1C420
DD353561CF6F0DA1C4F5C8AEDF5892C2BD5A0CD8D1A7A5A3BBD739D6F2BC391D
418F0E7804AC7C77A3C9439F65F83EF4241A2CD1555648060D57FDABA3433237
E1289886C2C22525326ACC9BABAAD676F483639449E38F8016503E1F9CA47E7C
DF6F2A82410E2DA4C39ABFCF39B01ACC495841B80AD14850495B2AD1459B0630
671A974AC7D5231E2D7BB431DE59A889D680F018292EC56DA0A5F215A13F336D
805E8293565D0AAE6D593C0DCCB6BB3ABE10D2EE8FCB5057804FC07BC0602092
96A4B3BCF4525DAC4825DA51BCAFF186E395715311219775C17DC15EE257E4CC
2F9AD1AE034EAC74D288FB737EAC5BC7A43853DDABD4B69B2C9B6F668169713C
28C766EF63E850D7029C50889772C2A68DFDC46E6820F7431715C811339046C9
6B1A50A46F7048DB04F5D738753E4E3F530BCBE121FEC1DD29A00D7C31E2F6B2
13D36A42641B28EDDB16219122884EC3AFADDEA2A7224709CE3D9804C4258808
CC61861FC2F9CB9D9220CD5844ED6C97ACF3C7637574DA93EEB163CA73E06E7A
69ECCDDC4D74BB3B0BF0CE436BCDE5BE2C90634EDFA4F7D81D2112939060EF86
7A103B528B115CDD7B0DDB2BBABF4804E68246F59D608F4E21B5F0B9462A2562
F49C050F736E4F7F76A92EB682C10765902452B56362738C1F7C0D5FBBC5B58D
423C8094882AE31C785F402870AC978CDBAD29F06DE4B041683C43A1FDD822C9
87D5A923212ED4AB82A2EEE98719E1FD091CA270ADC34BF023AF3FDD3867FFB6
2929FCA398F267F2EA827027ED2DE3F3A30F846C880DD8503DF40729FD416CEB
97BE353F53A2C4E26C784E3AD0FA1E2D3D6586EEE1E5C7CC8FAFF56103D38695
1AF8E5248024F3300ECA12E947E58A2868FD2234F7094E77410F0247BF785CC7
4DA068817EDDC7F566A2871087FCAC557DBBB7EDF8F85EAAFEBCFA8EDF377713
7F0122D381504F4D89E2695D5D14AFDB76C2CB390E1DF733FDD24DEDC9F2F3A9
919DF45AC29BC7CBDFADB4922589CB34C56B60A7650D5796CD540805A300C5FA
DAC1ECA471D5A43ADC46225BFF479FDF36BAD8BA86E8C79E1494FAF7537E2E4B
5655F90CAD526BEBDBA4AFEB3C8685EF10C1367B8836AD076985C00DB56D87FF
899A7A293893C508F5DE32D528A317A46D22AB9F3E90A88659A94459804B8CC4
23C71440FB918571368C34C1C496B64AC137994D2EAB837A043B78F0F1840EF4
3409B6F6452345091922961A6B74B4B9015C71ABAF57286E1C79F9C05DC04946
1C0FFEE3E6D1C2B8DF2D6E6BB2F4B856E82E2193DC981B8B1E54B2CD630D2124
16E30C12326C2B55CE2EB3FA3AF6D45FD279DA781AA3CFE8C7F1D80515EE4BAC
A1417D665588E622379827C937E9F58FABF04D372855E492F5906CC512780B84
9D7B47110EDEB9CFC0084F9F3C4A883B0CEF4932F1DCB31DEE09B66E236B1765
3559C4605D5AA39787E5D586A4CB2DC8975716496CAA78453674BD8BA0BB0C0C
843B7CBBA8E5860A25C0F3D944F87434FEC684640C62A57A3622D8EE3A24DA84
FECDD31E0E11BD089475D9A6524CB2F62AC9CFA8D351FD9D35CB725609E540A8
DDA92CBA6E9B966E5FB43713D4855DD2E674770D7D042DFBF82A2BF6776C5C64
989A533D4C2E6582832F8D100388F2BAD81BDE4180A973F3482D8DD0EF5175F1
60B252D5B451E5C0804BB2BD7A177BFB80D723A95738F59CA9DE6C34843A7568
8E720BFDCE9E0798A9C6A7199BF3036FCD4AADB3B6F3724701F32CFEB93AA93C
EE363800D371359529A368FE73167E608B85641FB228D6C85BE0E223BED32D41
87646266474F0A28D277FDAD8196126E8325A6B19980FE7DA6F970EBA532C778
52BA3F3080F38D0AF0F19C7CAC948D62C258D64BE86254109A3E5342311A4C0F
8E3C39F6BDD354F556B6CF60C5DFAFA52BCD41121AA643120BD7A182FA20600E
C3526CC975C76CA7E36DD2F64024D83A79B6BC4D5389BDF875335C69A792CA58
401708DD15F46E110078C5DED471EF4D5E5795CA63C10974B491E098DFB77258
C315065F737CE7C82430631D74349B45CDBFA5AED158AA1D2825B9AEE331EB0D
A2222FF75038C17DF64B2E1CA205D18B0B6540B6AE92FB7D6CED6204342008F1
BA66AA3CEE39D438CAD105697ABC181AE52DDA2FCFA9F07179B646EDF89A93BD
41D456AD717A040D7FEA8CCD5D0D07BC1A532C5EB19AAAD8C22E2DCB93303C48
FF5FB7464E3B443B3290A5771DDC44078CD6C3FD5877B95DD40F3CF5909CC330
EE01B5B25AC2201832873D14BFFC2925C7C2A5A9862C7A0DE824E1F3F56D4C5E
4FADBC7637AF97926CAFE712672E173DEB602FFCE6E9F81518AE1135B0C52495
30536A91ADB9CFCB8A4B1531F21331C1F0E266B1E20FE4E3F499D0E59AF57E6F
7F2D06159A319DA7D34801D8913D4D0B3480ED19375B972F76D205685FE4FDD2
1B2F229063145D87A6623875302E41F7C840323E7D12978CCAD79E8FCE867672
D67A69E54DB20B208AFBB25D3355EE91513ECEDE32790916B2DA7E973D7DA4FD
81C2672D8BEC04F5F41EBED549B9DBF014745C302D82F85D0CF4FAB09D9D82D3
F67F4E9B548B3A63465EF03FCC351582BD851EAB235722D91070A57A5469BD3A
12D950C97099F7FD95CFAB86CD2A0D886CA0FB45616A809701D8E1865E38C6BF
07F6D4968C7C74ECF6DB74929BB7BD41383C131D27D8E369BD83AD2DCF087362
BAEBF0FFE6EB7E81FB5D7D72DA1003E4D90A46ED3B645B30B124346EBB9C7DEB
AF23C2585FB735A34DEED53F304881B569DF7CBB4ABBC03D4F18FFFD8A4CCB04
DF0F0646EDF3FD9F96F772F28805F628C4475932FE02A23CBEDCD321B8805644
50F68ECCC88231F61566823B2D2504A77B5998393297150B43F7D4A28A77564D
620BD5E1B42879CA6CCC634DADBA09DC95F74170EC170AD1C283E4FABDAF0081
06BD7D74D5B3E79E4A93BBC14ED7D2969F85794039128BCF6B41B97AB9FE196E
5905192CBE0FBE4ED6C57C198ACA7597DC4C57F7FA4DD0222B59FCEA5909FF07
7E4C77C8711192105B3BBCCFC37DDA696774882E555E16F19133EFF8DB66CE43
C44EF7419874AD7CAB8B6BD42CA07D3FAC6703CF5DAFC4F4BCF0C62D91B6984D
65B039E01BBCEE79AF61A10D96E1DC0FC85C3E8EB0C035CE3F69BC02D2F94374
131C8FC41AC7780D8D5D6A22358547E27990DA64279D4FBA0A0BC5124E1A302A
C3575261644F6F04336F0329FA0E42711A53F8C6A8E783BF55D6DF3C45ECEFA5
3F1F2794DF9D626751701FEC779EF31ED8881015B03444E01F6A77D7161AF836
D99D37B6225430D4E1FA9C01D72860B5AED0569362AC7AAF77F758DD943988AF
1BC5AC770CEEEBD2780B296BACEB4133B04B7525B5324DE0B5BC2B0EC261BFC4
568806DD35C438BF39042D11FB795FC40707AFFED4BE904C5D8AE9390B5C0275
927933DF5FD2B335FF181608A9669A4A0DD92DDA0A87BF4DE3D6399C75414E7E
67E1CA36D5745EA5F840F0356985AB4A1E8A7401325155CCFF7093A475602BE0
82B9A53EA69D4FFA2775251147E9BA558C917AEBB9096A2AFEC143AC9F38275C
7F57FE1649B0353B91A40D6EC9B69FC0A06D353DB831962CAEC8B87578ED2398
069EC104236053E956DF9A0CF5350143572F93CEA31C4E29C6ABB8C3F888787D
E2F7DE6BA440C89D33E2AE782263746564E6EC812B35616895321CB3815CFD04
93B7EB4FEE6CFE72DA9AEC566EAAC3C89B1EF0992AB09C29DF38B6D078DFBCB4
EA7737576F27F8E745CFEEA6CD2EA1E170AB3E51ED225E5E1DCB0D2C5160BFB8
3D4D7F6102E884313D7BE1B78B2A947D61AEF14A92A7C06AE6F99647143BB755
BBB21E5F88FD649E8C2A6FA4DD2A9E13DEB55A9DC01D44BEB1EEB7BF8ACA47A2
0D9A871AF0EBDC005908076E0DD07B544BA8DE5E2B87D62B42CF30DB75AC409C
7FAA42E9C442E17CAE48A0201BDB5FA75951E6EAA1D41A9B179D7E3D794B2288
8A5A10AC3EF5037C17514EE0D668A63EBBBE35D2E5256F0702D601C431179E88
5DC63125436CFCD413E073E660CF6FE94A60405BFAA4935DAB82DE4D735F7302
11172F115D097450E067A3F32F31C6467D12B9A69001D8A4838DCBE3210D5BC7
D03B5097C5E324FF7D9AF40435054861FCB326F03E483784241ED1B10F1EA6DB
E6A39823E4AF73C620E7E8752A841CF428D5E3E538122AC8805A3985AB4C8DE6
C2799F5879EAA422F2DAF02D22C6A716841ADAB3E253EDBA024145631B61E4CC
A71F465252F7C6D5FDCE5DE11491437081D5CE9C3F2460508C1BA06E2F9E521D
86CDEA2C56276F11CB4DBBA7D18F986F642C9507553C85DBFAEE5F55AA0E4B44
0265E3F3775AFBC594C89E8CD4C96E947021B5B893AA27082F7C90BB0883A021
B9876B07E8A6F62B366E39FC55EEEA3A5BC0ABC86150B13AF4F92B070523C64D
8BBE3EB10699DD6FCB9A90EA298CDE2CA45227CBA95D0EE8FB1B2C876ECCB70E
3C19C0C20A28EC02673F95E29457E3E6F7C52669FA86641D4D45923A0BF64460
62393799BE61A7D538716617BD45F17E43E42A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600
(diversity_0.7_others_test.inc.drv.dvi)
@start /Fa 134[44 1[60 44 46 32 33 33 2[42 46 69 3[23
2[25 37 1[37 46 42 11[62 4[57 2[76 8[63 2[62 7[42 42
42 42 42 42 42 42 42 42 3[23 2[32 32 2[69 37[{}35 83.022
/CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 150 1987 a @beginspecial
0 @llx 0 @lly 324 @urx 202 @ury 3240 @rwi @setspecial
%%BeginDocument: diversity_0.7_others_test.inc.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: diversity_0.7_others_test.inc.tex
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Sun Apr 27 15:44:33 2014
%%DocumentFonts: 
%%BoundingBox: 0 0 324 201
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (diversity_0.7_others_test.inc.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (xie)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Apr 27 15:44:33 2014)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
0 0 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
900 640 M
63 0 V
5217 0 R
-63 0 V
900 766 M
31 0 V
5249 0 R
-31 0 V
900 892 M
31 0 V
5249 0 R
-31 0 V
900 1018 M
31 0 V
5249 0 R
-31 0 V
900 1144 M
31 0 V
5249 0 R
-31 0 V
900 1270 M
63 0 V
5217 0 R
-63 0 V
900 1396 M
31 0 V
5249 0 R
-31 0 V
900 1523 M
31 0 V
5249 0 R
-31 0 V
900 1649 M
31 0 V
5249 0 R
-31 0 V
900 1775 M
31 0 V
5249 0 R
-31 0 V
900 1901 M
63 0 V
5217 0 R
-63 0 V
900 2027 M
31 0 V
5249 0 R
-31 0 V
900 2153 M
31 0 V
5249 0 R
-31 0 V
900 2279 M
31 0 V
5249 0 R
-31 0 V
900 2405 M
31 0 V
5249 0 R
-31 0 V
900 2531 M
63 0 V
5217 0 R
-63 0 V
900 2657 M
31 0 V
5249 0 R
-31 0 V
900 2783 M
31 0 V
5249 0 R
-31 0 V
900 2909 M
31 0 V
5249 0 R
-31 0 V
900 3036 M
31 0 V
5249 0 R
-31 0 V
900 3162 M
63 0 V
5217 0 R
-63 0 V
900 3288 M
31 0 V
5249 0 R
-31 0 V
900 3414 M
31 0 V
5249 0 R
-31 0 V
900 3540 M
31 0 V
5249 0 R
-31 0 V
900 3666 M
31 0 V
5249 0 R
-31 0 V
900 3792 M
63 0 V
5217 0 R
-63 0 V
900 640 M
0 63 V
stroke 900 703 M
0 3089 R
0 -63 V
1560 640 M
0 63 V
0 3089 R
0 -63 V
2220 640 M
0 63 V
0 3089 R
0 -63 V
2880 640 M
0 63 V
0 3089 R
0 -63 V
3540 640 M
0 63 V
0 3089 R
0 -63 V
4200 640 M
0 63 V
0 3089 R
0 -63 V
4860 640 M
0 63 V
0 3089 R
0 -63 V
5520 640 M
0 63 V
0 3089 R
0 -63 V
6180 640 M
0 63 V
0 3089 R
0 -63 V
stroke
900 3792 N
900 640 L
5280 0 V
0 3152 V
-5280 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
1.200 UP
1.000 UL
LT0
0.00 1.00 0.00 C LTb
LT0
0.00 1.00 0.00 C 5397 1203 M
543 0 V
900 3332 M
660 -574 V
660 0 V
660 -284 V
660 858 V
660 0 V
660 -574 V
660 574 V
660 0 V
900 3332 Box
1560 2758 Box
2220 2758 Box
2880 2474 Box
3540 3332 Box
4200 3332 Box
4860 2758 Box
5520 3332 Box
6180 3332 Box
5668 1203 Box
1.400 UP
1.000 UL
LT1
0.00 0.00 1.00 C LTb
LT1
0.00 0.00 1.00 C 5397 1003 M
543 0 V
900 3622 M
1560 2474 L
660 0 V
2880 1327 L
660 1431 V
660 864 V
4860 2474 L
660 1148 V
660 0 V
900 3622 Circle
1560 2474 Circle
2220 2474 Circle
2880 1327 Circle
3540 2758 Circle
4200 3622 Circle
4860 2474 Circle
5520 3622 Circle
6180 3622 Circle
5668 1003 Circle
1.400 UP
1.000 UL
LT2
1.00 0.00 0.00 C LTb
LT2
1.00 0.00 0.00 C 5397 803 M
543 0 V
900 2758 M
660 -574 V
660 0 V
2880 1043 L
660 1431 V
660 284 V
660 -574 V
660 574 V
660 0 V
900 2758 TriU
1560 2184 TriU
2220 2184 TriU
2880 1043 TriU
3540 2474 TriU
4200 2758 TriU
4860 2184 TriU
5520 2758 TriU
6180 2758 TriU
5668 803 TriU
1.000 UL
LTb
900 3792 N
900 640 L
5280 0 V
0 3152 V
-5280 0 V
Z stroke
1.000 UP
1.000 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage

%%EndDocument
 @endspecial 1701 1672 a Fa(P)n(erformance,)26 b(new)1855
1589 y(Uniform,)i(new)1664 1506 y(P)n(erformance,)d(basic)1233
1949 y(Measures)h(of)h(Div)n(ersit)n(y)333 1055 y
 gsave currentpoint currentpoint translate 270 rotate neg exch neg
exch translate
 333
1055 a 84 1075 a Fa(Accuracy)g(\(\045\))333 1055 y
 currentpoint grestore moveto
 333
1055 a 2718 1824 a Fa(9)-317 b(8)g(7)g(6)g(5)g(4)g(3)g(2)g(1)392
427 y(73)392 690 y(72)392 953 y(71)392 1215 y(70)392
1478 y(69)392 1740 y(68)p Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
